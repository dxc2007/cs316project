{"ast":null,"code":"import _slicedToArray from \"/home/xiaochen/Downloads/cs316project/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/xiaochen/Downloads/cs316project/frontend/src/components/NavBar.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport './components.css';\nimport Search from './Search';\nimport { useStateValue } from '../state';\nimport { Link, useLocation } from 'react-router-dom';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    flexGrow: 1,\n    fontSize: '40px'\n  },\n  main: {\n    textDecoration: 'none',\n    fontFamily: \"Lobster\",\n    color: 'black',\n    fontSize: \"50px\"\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'black'\n  }\n}));\n\nconst NavBar = () => {\n  const _useStateValue = useStateValue(),\n        _useStateValue2 = _slicedToArray(_useStateValue, 2),\n        user = _useStateValue2[0].user,\n        dispatch = _useStateValue2[1];\n\n  const classes = useStyles();\n  const location = useLocation();\n\n  const renderUserOrLogin = () => {\n    if (localStorage.getItem(\"key\")) {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: classes.link,\n        to: \"/profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, localStorage.getItem(\"username\"))));\n    } else {\n      return React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: classes.link,\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Login\"));\n    }\n  };\n\n  const maybeRenderSearch = () => {\n    if (location.pathname !== \"/search\") {\n      return React.createElement(Search, {\n        className: classes.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      });\n    } else {}\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"static\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.title,\n    variant: \"title\",\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: classes.main,\n    to: \"/search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Blueberry\")), maybeRenderSearch(), renderUserOrLogin())));\n};\n\nexport default NavBar;","map":{"version":3,"sources":["/home/xiaochen/Downloads/cs316project/frontend/src/components/NavBar.js"],"names":["React","makeStyles","AppBar","Toolbar","Button","Typography","Search","useStateValue","Link","useLocation","useStyles","theme","root","flexGrow","title","fontSize","main","textDecoration","fontFamily","color","link","NavBar","user","dispatch","classes","location","renderUserOrLogin","localStorage","getItem","maybeRenderSearch","pathname","search"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\nimport './components.css';\n\nimport Search from './Search'\n\nimport { useStateValue } from '../state'\nimport { Link, useLocation } from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n    },\n    title: {\n      flexGrow: 1,\n      fontSize: '40px',\n    },\n    main: {\n        textDecoration: 'none',\n        fontFamily: \"Lobster\", \n        color: 'black',\n        fontSize: \"50px\",\n    },\n    link: {\n        textDecoration: 'none',\n        color: 'black',\n    }, \n  }));\n\nconst NavBar = () => {\n      \n    const [{ user }, dispatch] = useStateValue();\n    const classes = useStyles();\n    const location = useLocation();\n    const renderUserOrLogin = () => {\n        if (localStorage.getItem(\"key\")) {\n            return (\n            <React.Fragment>\n                <Button>\n                    <Link className={classes.link} to=\"/profile\">\n                        {localStorage.getItem(\"username\")}\n                    </Link>\n                </Button>\n            </React.Fragment>\n            );\n        } else {\n            return (\n                <Button>\n                    <Link className={classes.link} to=\"/login\">Login</Link>\n                </Button>\n            );\n        }\n    }\n\n    const maybeRenderSearch = () => {\n        if (location.pathname !== \"/search\") {\n           return (<Search className={classes.search}/>)\n        } else {}\n    }\n\n    return(\n        <div className={classes.root}>\n        <AppBar position=\"static\">\n            <Toolbar>\n                <Typography className={classes.title} variant=\"title\" color=\"inherit\">\n                <Link className={classes.main} to=\"/search\">\n                        Blueberry\n                    </Link>\n                </Typography>\n                {maybeRenderSearch()}\n                {renderUserOrLogin()}\n            </Toolbar>\n        </AppBar>\n        </div>\n    )\n}\nexport default NavBar;"]},"metadata":{},"sourceType":"module"}