{"ast":null,"code":"import _defineProperty from \"/home/xiaochen/Downloads/cs316project/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/xiaochen/Downloads/cs316project/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/xiaochen/Downloads/cs316project/frontend/src/components/ResultPage.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useStateValue } from '../state';\nimport { Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Slider from '@material-ui/core/Slider';\nimport ResultGrid from './ResultGrid';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(5)\n  },\n  paper: {\n    minHeight: '150px',\n    height: '100%',\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    textAlign: 'center'\n  },\n  container: {\n    alignItems: 'stretch'\n  },\n  item: {\n    paddingBottom: theme.spacing(2)\n  },\n  slider: {\n    width: \"80%\"\n  },\n  map: {\n    width: \"80%\"\n  }\n}));\nconst marks = [{\n  value: 0,\n  label: 'Minimum'\n}, {\n  value: 1,\n  label: 'Average'\n}, {\n  value: 2,\n  label: 'Maximum'\n}];\n\nfunction valuetext(value) {\n  return \"\".concat(value, \"\\xB0C\");\n}\n\nfunction valueLabelFormat(value) {\n  return marks.findIndex(mark => mark.value === value) + 1;\n}\n\nexport default function ResultPage() {\n  const classes = useStyles();\n\n  const _useStateValue = useStateValue(),\n        _useStateValue2 = _slicedToArray(_useStateValue, 2),\n        _useStateValue2$ = _useStateValue2[0],\n        searchResult = _useStateValue2$.searchResult,\n        searchQuery = _useStateValue2$.searchQuery,\n        housingResult = _useStateValue2$.housingResult,\n        wageResult = _useStateValue2$.wageResult,\n        dispatch = _useStateValue2[1];\n\n  const _React$useState = React.useState({\n    wage: 1,\n    housing: 1\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        toggle = _React$useState2[0],\n        setToggle = _React$useState2[1];\n\n  const handleChange = name => (event, newVal) => {\n    setToggle(_objectSpread({}, toggle, {\n      [name]: newVal\n    }));\n  };\n\n  const html = '<iframe width=\"600\" className=classes.map height=\"700\" frameborder=\"0\" scrolling=\"no\" src=\"//plot.ly/~yuqi98/70.embed\"></iframe>';\n\n  const _React$useState3 = React.useState({\n    __html: html\n  }),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        map = _React$useState4[0],\n        setMap = _React$useState4[1];\n\n  const renderHousingValue = () => {\n    if (!housingResult || !housingResult.minimum) {\n      return null;\n    }\n\n    if (toggle.housing == 0) {\n      return housingResult.minimum.toLocaleString();\n    } else if (toggle.housing == 1) {\n      return housingResult.average.toLocaleString();\n    } else {\n      return housingResult.maximum.toLocaleString();\n    }\n  };\n\n  const renderWageValue = () => {\n    if (!wageResult || !wageResult.minimum) {\n      return null;\n    }\n\n    if (toggle.wage == 0) {\n      return wageResult.minimum.toLocaleString();\n    } else if (toggle.wage == 1) {\n      return wageResult.average.toLocaleString();\n    } else {\n      return wageResult.maximum.toLocaleString();\n    }\n  };\n\n  const createMarkup = () => {\n    return map;\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    className: classes.container,\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    className: [classes.container, classes.item].join(' '),\n    container: true,\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    className: classes.item,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Quick Query\"), React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, searchQuery ? React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"The average salary in \"), React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, searchQuery.location), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \" for a \"), React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, searchQuery.job), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \" is: \")) : null), searchResult && wageResult ? React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Slider, {\n    className: classes.slider,\n    defaultValue: 1,\n    getAriaValueText: valuetext,\n    \"aria-labelledby\": \"discrete-slider-always\",\n    min: 0,\n    onChange: handleChange('wage'),\n    max: 2,\n    marks: marks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, renderWageValue(), \" USD\")) : null)), React.createElement(Grid, {\n    className: classes.item,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Housing Snapshot\"), React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, searchQuery ? React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"The average housing price in  \"), React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, searchQuery.location), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"  is: \")) : null), searchResult && housingResult ? React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(Slider, {\n    className: classes.slider,\n    defaultValue: 1,\n    getAriaValueText: valuetext,\n    \"aria-labelledby\": \"discrete-slider-always\",\n    min: 0,\n    onChange: handleChange('housing'),\n    max: 2,\n    marks: marks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, renderHousingValue(), \" USD\")) : null)), React.createElement(Grid, {\n    className: classes.item,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(ResultGrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    dangerouslySetInnerHTML: createMarkup(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["/home/xiaochen/Downloads/cs316project/frontend/src/components/ResultPage.js"],"names":["React","useEffect","makeStyles","useStateValue","Typography","Grid","Paper","Slider","ResultGrid","useStyles","theme","root","margin","spacing","paper","minHeight","height","paddingLeft","paddingRight","textAlign","container","alignItems","item","paddingBottom","slider","width","map","marks","value","label","valuetext","valueLabelFormat","findIndex","mark","ResultPage","classes","searchResult","searchQuery","housingResult","wageResult","dispatch","useState","wage","housing","toggle","setToggle","handleChange","name","event","newVal","html","__html","setMap","renderHousingValue","minimum","toLocaleString","average","maximum","renderWageValue","createMarkup","join","location","job"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useStateValue } from '../state';\nimport { Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Slider from '@material-ui/core/Slider';\n\n\nimport ResultGrid from './ResultGrid'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n      margin: theme.spacing(5),\n  },\n  paper: {\n      minHeight: '150px',\n      height: '100%',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      textAlign: 'center',\n  },\n  container: {\n      alignItems: 'stretch',\n  },\n  item: {\n    paddingBottom: theme.spacing(2)\n  },\n  slider: {\n      width: \"80%\",\n  },\n  map: {\n      width: \"80%\",\n  }\n\n}));\n\nconst marks = [\n    {\n      value: 0,\n      label: 'Minimum',\n    },\n    {\n      value: 1,\n      label: 'Average',\n    },\n    {\n      value: 2,\n      label: 'Maximum',\n    },\n  ];\n  \n  function valuetext(value) {\n    return `${value}°C`;\n  }\n  \n  function valueLabelFormat(value) {\n    return marks.findIndex(mark => mark.value === value) + 1;\n  }\n\nexport default function ResultPage() {\n    const classes = useStyles();\n    const [{ searchResult, searchQuery, housingResult, wageResult }, dispatch] = useStateValue();\n\n    const [toggle, setToggle] = React.useState({\n        wage: 1,\n        housing: 1,\n      });\n    const handleChange = name => (event, newVal) => {\n        setToggle({ ...toggle, [name]: newVal });\n    };\n\n    const html = '<iframe width=\"600\" className=classes.map height=\"700\" frameborder=\"0\" scrolling=\"no\" src=\"//plot.ly/~yuqi98/70.embed\"></iframe>';\n    const [map, setMap] = React.useState({__html: html});\n\n    const renderHousingValue = () => {\n        if (!housingResult || !housingResult.minimum) {\n            return null;\n        }\n        if (toggle.housing == 0) {\n            return housingResult.minimum.toLocaleString();\n        } else if (toggle.housing == 1) {\n            return housingResult.average.toLocaleString();\n        } else {\n            return housingResult.maximum.toLocaleString();\n        }\n    }\n\n    const renderWageValue = () => {\n        if (!wageResult ||  !wageResult.minimum) {\n            return null;\n        }\n        if (toggle.wage == 0) {\n            return wageResult.minimum.toLocaleString();\n        } else if (toggle.wage == 1) {\n            return wageResult.average.toLocaleString();\n        } else {\n            return wageResult.maximum.toLocaleString();\n        }\n    }\n\n    const createMarkup = () => {\n        return map;\n    }\n\n    return (\n        <div className={classes.root}>\n            <Grid className={classes.container} container spacing={3}>\n                <Grid className={[classes.container, classes.item].join(' ')} container item xs={6}>\n                    <Grid className={classes.item} item xs={12}>\n                        <Paper className={classes.paper}>\n                            <Typography variant='h6'>\n                                Quick Query    \n                            </Typography> \n                            <Typography variant='body2'>\n                            {(searchQuery) ? \n                                <React.Fragment><span>The average salary in </span>\n                                <b>{searchQuery.location}</b>\n                                <span> for a </span>\n                                <b>{searchQuery.job}</b>\n                                <span> is: </span></React.Fragment>\n                                : null}\n                            </Typography> \n                            {(searchResult && wageResult) ? \n                             <React.Fragment><Slider\n                             className={classes.slider}\n                             defaultValue={1}\n                             getAriaValueText={valuetext}\n                             aria-labelledby=\"discrete-slider-always\"\n                             min={0}\n                             onChange={handleChange('wage')}\n                             max={2}\n                             marks={marks}/>\n                             <Typography>\n                             {renderWageValue()} USD\n                            </Typography></React.Fragment>\n                                : null}\n                        </Paper>\n                    </Grid>\n                    <Grid className={classes.item} item xs={12}>\n                        <Paper className={classes.paper}>\n                        <Typography variant='h6'>\n                                Housing Snapshot  \n                            </Typography>\n                            <Typography variant='body2'>\n                            {(searchQuery) ? \n                                <React.Fragment><span>The average housing price in  </span>\n                                <b>{searchQuery.location}</b>\n                                <span>  is: </span></React.Fragment>\n                                : null}\n                            </Typography> \n                            {(searchResult && housingResult) ? \n                             <React.Fragment><Slider\n                             className={classes.slider}\n                             defaultValue={1}\n                             getAriaValueText={valuetext}\n                             aria-labelledby=\"discrete-slider-always\"\n                             min={0}\n                             onChange={handleChange('housing')}\n                             max={2}\n                             marks={marks}/>\n                             <Typography>\n                             {renderHousingValue()} USD\n                            </Typography></React.Fragment>\n                                : null}\n                            \n                        </Paper>\n                    </Grid>\n                    <Grid className={classes.item} item xs={12}>\n                        <ResultGrid/>\n                    </Grid>\n                </Grid>\n                <Grid item xs={6}>\n                <Paper className={classes.paper}>\n\n                <Typography variant='h6' color='inherit'>\n                </Typography>\n                <div dangerouslySetInnerHTML={createMarkup()}/>\n                </Paper>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}