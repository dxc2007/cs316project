{"ast":null,"code":"import _defineProperty from \"/home/xiaochen/Downloads/cs316project/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/xiaochen/Downloads/cs316project/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/xiaochen/Downloads/cs316project/frontend/src/components/LocationList.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// *https://www.registers.service.gov.uk/registers/country/use-the-api*\nimport 'isomorphic-fetch';\nimport React from 'react';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  auto: {\n    minWidth: 240,\n    margin: theme.spacing(1),\n    flex: \"0 0 70%\"\n  }\n}));\nexport default function LocationList(props) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const _React$useState3 = React.useState([]),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        options = _React$useState4[0],\n        setOptions = _React$useState4[1];\n\n  const loading = open && options.length === 0;\n  React.useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    (async () => {\n      const init = await axios.get(\"http://67.159.88.90:8000/api/sites/\");\n\n      if (!init || !init.data || init.data.length === 0) {\n        return null;\n      }\n\n      const count = init.data.count;\n      const locations = await axios.get(\"http://67.159.88.90:8000/api/sites/?limit=\" + count);\n\n      if (active) {\n        setOptions(locations.data.results);\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n  return React.createElement(Autocomplete, {\n    className: classes.auto,\n    id: \"location-select\",\n    open: open,\n    onOpen: () => {\n      setOpen(true);\n    },\n    onClose: () => {\n      setOpen(false);\n    },\n    getOptionSelected: (option, value) => option.employer_name === value.employer_name,\n    getOptionLabel: location => location ? location.city + \", \" + location.state + \", \" + location.zip_code : \"\",\n    options: options,\n    loading: loading,\n    onChange: (event, val) => props.setLocation(val),\n    value: props.location,\n    renderInput: params => React.createElement(TextField, Object.assign({}, params, {\n      fullWidth: true,\n      variant: \"outlined\",\n      InputProps: _objectSpread({}, params.InputProps, {\n        endAdornment: React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, loading ? React.createElement(CircularProgress, {\n          color: \"inherit\",\n          size: 20,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }) : null, params.InputProps.endAdornment)\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/home/xiaochen/Downloads/cs316project/frontend/src/components/LocationList.js"],"names":["React","axios","TextField","Autocomplete","CircularProgress","makeStyles","useStyles","theme","auto","minWidth","margin","spacing","flex","LocationList","props","classes","useState","open","setOpen","options","setOptions","loading","length","useEffect","active","undefined","init","get","data","count","locations","results","option","value","employer_name","location","city","state","zip_code","event","val","setLocation","params","InputProps","endAdornment"],"mappings":"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","sourcesContent":["// *https://www.registers.service.gov.uk/registers/country/use-the-api*\nimport 'isomorphic-fetch';\nimport React from 'react';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    auto: {\n        minWidth: 240, \n        margin: theme.spacing(1),\n        flex: \"0 0 70%\",\n    },\n}));\n\nexport default function LocationList(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [options, setOptions] = React.useState([]);\n    const loading = open && options.length === 0;\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    (async () => {\n        const init = await axios.get(\"http://67.159.88.90:8000/api/sites/\");\n        if (!init || !init.data || init.data.length === 0) {\n          return null;\n        } \n        const count = init.data.count;\n        const locations = await axios.get(\"http://67.159.88.90:8000/api/sites/?limit=\" + count);\n        \n      if (active) {\n        setOptions(locations.data.results);\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  return (\n    <Autocomplete\n      className={classes.auto}\n      id=\"location-select\"\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      getOptionSelected={(option, value) => option.employer_name === value.employer_name}\n      getOptionLabel={location => location ? (location.city + \", \" + location.state + \", \" + location.zip_code) : \"\"}\n      options={options}\n      loading={loading}\n      onChange={(event, val) => props.setLocation(val)}\n      value={props.location}\n      renderInput={params => (\n        <TextField\n          {...params}\n          fullWidth\n          variant=\"outlined\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}"]},"metadata":{},"sourceType":"module"}