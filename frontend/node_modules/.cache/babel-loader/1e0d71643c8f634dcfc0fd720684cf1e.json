{"ast":null,"code":"import _defineProperty from \"/home/xiaochen/Downloads/cs316project/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectDestructuringEmpty from \"/home/xiaochen/Downloads/cs316project/frontend/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport _slicedToArray from \"/home/xiaochen/Downloads/cs316project/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/xiaochen/Downloads/cs316project/frontend/src/components/WorkForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, TextField, Typography, Container, InputLabel } from '@material-ui/core';\nimport { useStateValue } from '../state';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport CompanyList from './CompanyList';\nimport LocationList from './LocationList';\nimport axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n  form: {\n    margin: theme.spacing(1)\n  },\n  container: {\n    marginTop: theme.spacing(1),\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  header: {\n    marginTop: theme.spacing(5),\n    textAlign: \"center\",\n    flex: \"0 0 100%\"\n  },\n  subtitle: {\n    marginBottom: theme.spacing(5),\n    textAlign: \"center\",\n    flex: \"0 0 100%\"\n  },\n  input: {\n    display: 'none'\n  },\n  addButton: {\n    margin: theme.spacing(1),\n    flex: \"0 0 20%\"\n  },\n  autoComplete: {\n    minWidth: 240,\n    margin: theme.spacing(1),\n    flex: \"0 0 70%\"\n  },\n  subtext: {\n    flex: \"0 0 35%\",\n    marginBottom: theme.spacing(3),\n    paddingRight: theme.spacing(1)\n  },\n  subtext_loc: {\n    flex: \"0 0 25%\",\n    paddingRight: theme.spacing(1),\n    marginBottom: theme.spacing(3)\n  },\n  fab: {\n    margin: theme.spacing(1)\n  },\n  submit: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(5)\n  }\n}));\nexport default function WorkForm() {\n  const classes = useStyles();\n\n  const _useStateValue = useStateValue(),\n        _useStateValue2 = _slicedToArray(_useStateValue, 2);\n\n  _objectDestructuringEmpty(_useStateValue2[0]);\n\n  const dispatch = _useStateValue2[1];\n\n  const _React$useState = React.useState({\n    addCompany: false,\n    addLocation: false,\n    newCompany: '',\n    newIndustry: '',\n    newCity: '',\n    newState: '',\n    newZip: '',\n    position: '',\n    year: '',\n    salary: ''\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        values = _React$useState2[0],\n        setValues = _React$useState2[1];\n\n  const _React$useState3 = React.useState(null),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        company = _React$useState4[0],\n        setCompany = _React$useState4[1];\n\n  const _React$useState5 = React.useState(null),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        location = _React$useState6[0],\n        setLocation = _React$useState6[1];\n\n  const _React$useState7 = React.useState(false),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        didPost = _React$useState8[0],\n        setDidPost = _React$useState8[1];\n\n  const handleChange = name => (event, val) => {\n    if (name === \"company\" || name === \"location\") {\n      if (val) {\n        setValues(_objectSpread({}, values, {\n          [name]: val\n        }));\n      } else {\n        setValues(_objectSpread({}, values, {\n          [name]: null\n        }));\n      }\n    } else {\n      setValues(_objectSpread({}, values, {\n        [name]: event.target.value\n      }));\n    }\n  };\n\n  const toggleAddCompany = () => {\n    setValues(_objectSpread({}, values, {\n      addCompany: !values.addCompany\n    }));\n  };\n\n  const toggleAddLocation = () => {\n    setValues(_objectSpread({}, values, {\n      addLocation: !values.addLocation\n    }));\n  };\n\n  const postNewCompany = () => async () => {\n    const res = await axios.post(\"http://67.159.88.90:8000/api/employers/\", {\n      \"employer_name\": values.newCompany,\n      \"industry\": values.newIndustry\n    });\n    setDidPost(true);\n    setCompany(res.data);\n    setValues(_objectSpread({}, values, {\n      newCompany: \"\",\n      newIndustry: \"\",\n      addCompany: false\n    }));\n  };\n\n  const postNewLocation = () => async () => {\n    const res = await axios.post(\"http://67.159.88.90:8000/api/sites/\", {\n      \"zip_code\": values.newZip,\n      \"city\": values.newCity,\n      \"state\": values.newState\n    });\n    setDidPost(true);\n    setLocation(res.data);\n    setValues(_objectSpread({}, values, {\n      newCity: \"\",\n      newZip: \"\",\n      newState: \"\",\n      addLocation: false\n    }));\n  };\n\n  const postWorkForm = () => async () => {\n    const url = \"http://67.159.88.90:8000/api/userwagepending/\";\n    const data = {\n      \"siteid\": location.siteid,\n      \"employerid\": company.employerid,\n      \"uid\": localStorage.getItem('uid'),\n      \"position\": values.position,\n      \"wage\": values.salary,\n      \"year\": values.year\n    };\n    console.log(data);\n    const res = await axios.post(url, data, {\n      headers: {\n        \"Authorization\": \"Token \" + localStorage.getItem(\"key\"),\n        \"Content-Type\": \"application/json\"\n      }\n    }).catch(err => console.log(err));\n    console.log(res);\n    setValues({\n      newCompany: '',\n      newIndustry: '',\n      newCity: '',\n      newState: '',\n      newZip: '',\n      position: '',\n      year: '',\n      salary: ''\n    });\n    setCompany(null);\n    setLocation(null);\n  };\n\n  useEffect(() => {\n    const fetchCompanyOptions = async () => {\n      const init = await axios.get(\"http://67.159.88.90:8000/api/employers/\");\n\n      if (!init || !init.data || init.data.length === 0) {\n        return null;\n      }\n\n      const count = init.data.count;\n      const companies = await axios.get(\"http://67.159.88.90:8000/api/employers/?limit=\" + count);\n      dispatch({\n        type: 'getCompanies',\n        companies: companies.data.results\n      });\n    };\n\n    fetchCompanyOptions();\n    setDidPost(false);\n  }, [didPost]);\n  useEffect(() => {\n    const fetchLocationOptions = async () => {\n      const init = await axios.get(\"http://67.159.88.90:8000/api/sites/\");\n\n      if (!init || !init.data || init.data.length === 0) {\n        return null;\n      }\n\n      const count = init.data.count;\n      const locations = await axios.get(\"http://67.159.88.90:8000/api/sites/?limit=\" + count);\n      dispatch({\n        type: 'getLocations',\n        locations: locations.data.results\n      });\n    };\n\n    fetchLocationOptions();\n    setDidPost(false);\n  }, [didPost]);\n  return React.createElement(Container, {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.header,\n    position: \"static\",\n    component: \"h1\",\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"Add your work experience\"), React.createElement(Typography, {\n    className: classes.subtitle,\n    position: \"static\",\n    variant: \"subtitle1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \"Contribute and give back to the Blueberry community!\"), React.createElement(Typography, {\n    className: classes.text,\n    position: \"static\",\n    component: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"Which company did you work at?\"), React.createElement(CompanyList, {\n    company: company,\n    setCompany: setCompany,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.addButton,\n    onClick: toggleAddCompany,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, \"Add Company\"), values.addCompany ? React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.subtext,\n    name: \"new-company\",\n    variant: \"standard\",\n    margin: \"normal\",\n    label: \"Company Name\",\n    value: null,\n    onChange: handleChange('newCompany'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.subtext,\n    name: \"new-industry\",\n    variant: \"standard\",\n    margin: \"normal\",\n    label: \"Industry Type\",\n    value: null,\n    onChange: handleChange('newIndustry'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }), React.createElement(Fab, {\n    color: \"primary\",\n    onClick: postNewCompany(),\n    size: \"small\",\n    \"aria-label\": \"add\",\n    className: classes.fab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }))) : null, React.createElement(Typography, {\n    className: classes.text,\n    position: \"static\",\n    component: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, \"Where was the office located?\"), React.createElement(LocationList, {\n    location: location,\n    setLocation: setLocation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.addButton,\n    onClick: toggleAddLocation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, \"Add Location\"), values.addLocation ? React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.subtext_loc,\n    name: \"new-city\",\n    variant: \"standard\",\n    margin: \"normal\",\n    label: \"City\",\n    value: null,\n    onChange: handleChange('newCity'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.subtext_loc,\n    name: \"new-state\",\n    variant: \"standard\",\n    margin: \"normal\",\n    label: \"State\",\n    value: null,\n    onChange: handleChange('newState'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.subtext_loc,\n    name: \"new-zip\",\n    variant: \"standard\",\n    margin: \"normal\",\n    label: \"Zip Code\",\n    value: null,\n    onChange: handleChange('newZip'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }), React.createElement(Fab, {\n    color: \"primary\",\n    onClick: postNewLocation(),\n    size: \"small\",\n    \"aria-label\": \"add\",\n    className: classes.fab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  }))) : null, React.createElement(Typography, {\n    className: classes.text,\n    position: \"static\",\n    component: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, \"What position did you hold?\"), React.createElement(TextField, {\n    name: \"position\",\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    label: \"Position\",\n    value: values.position,\n    onChange: handleChange('position'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    className: classes.text,\n    position: \"static\",\n    component: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }, \"When is this information from?\"), React.createElement(TextField, {\n    name: \"year\",\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    label: \"Year\",\n    value: values.year,\n    onChange: handleChange('year'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    className: classes.text,\n    position: \"static\",\n    component: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316\n    },\n    __self: this\n  }, \"What was your salary?\"), React.createElement(TextField, {\n    name: \"salary\",\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    label: \"Salary\",\n    value: values.salary,\n    onChange: handleChange('salary'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    onClick: postWorkForm(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329\n    },\n    __self: this\n  }, \"Submit\"));\n}","map":{"version":3,"sources":["/home/xiaochen/Downloads/cs316project/frontend/src/components/WorkForm.js"],"names":["React","useEffect","makeStyles","Button","TextField","Typography","Container","InputLabel","useStateValue","Fab","AddIcon","CompanyList","LocationList","axios","useStyles","theme","form","margin","spacing","container","marginTop","display","flexDirection","flexWrap","alignItems","justifyContent","header","textAlign","flex","subtitle","marginBottom","input","addButton","autoComplete","minWidth","subtext","paddingRight","subtext_loc","fab","submit","WorkForm","classes","dispatch","useState","addCompany","addLocation","newCompany","newIndustry","newCity","newState","newZip","position","year","salary","values","setValues","company","setCompany","location","setLocation","didPost","setDidPost","handleChange","name","event","val","target","value","toggleAddCompany","toggleAddLocation","postNewCompany","res","post","data","postNewLocation","postWorkForm","url","siteid","employerid","localStorage","getItem","console","log","headers","catch","err","fetchCompanyOptions","init","get","length","count","companies","type","results","fetchLocationOptions","locations","text"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,UAA5B,EAAwCC,SAAxC,EAAmDC,UAAnD,QAAqE,mBAArE;AACA,SAASC,aAAT,QAA8B,UAA9B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,SAAS,GAAGZ,UAAU,CAACa,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADJ,GAD+B;AAIrCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAEL,KAAK,CAACG,OAAN,CAAc,CAAd,CADF;AAETG,IAAAA,OAAO,EAAE,MAFA;AAGTC,IAAAA,aAAa,EAAE,KAHN;AAITC,IAAAA,QAAQ,EAAE,MAJD;AAKTC,IAAAA,UAAU,EAAE,QALH;AAMTC,IAAAA,cAAc,EAAE;AANP,GAJ0B;AAYrCC,EAAAA,MAAM,EAAE;AACJN,IAAAA,SAAS,EAAEL,KAAK,CAACG,OAAN,CAAc,CAAd,CADP;AAEJS,IAAAA,SAAS,EAAE,QAFP;AAGJC,IAAAA,IAAI,EAAE;AAHF,GAZ6B;AAiBrCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,EAAEf,KAAK,CAACG,OAAN,CAAc,CAAd,CADN;AAERS,IAAAA,SAAS,EAAE,QAFH;AAGRC,IAAAA,IAAI,EAAE;AAHE,GAjB2B;AAsBrCG,EAAAA,KAAK,EAAE;AACLV,IAAAA,OAAO,EAAE;AADJ,GAtB8B;AAyBrCW,EAAAA,SAAS,EAAE;AACTf,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADC;AAETU,IAAAA,IAAI,EAAE;AAFG,GAzB0B;AA6BrCK,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE,GADE;AAEZjB,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CAFI;AAGZU,IAAAA,IAAI,EAAE;AAHM,GA7BuB;AAkCrCO,EAAAA,OAAO,EAAE;AACPP,IAAAA,IAAI,EAAE,SADC;AAEPE,IAAAA,YAAY,EAAEf,KAAK,CAACG,OAAN,CAAc,CAAd,CAFP;AAGPkB,IAAAA,YAAY,EAAErB,KAAK,CAACG,OAAN,CAAc,CAAd;AAHP,GAlC4B;AAuCrCmB,EAAAA,WAAW,EAAE;AACXT,IAAAA,IAAI,EAAE,SADK;AAEXQ,IAAAA,YAAY,EAAErB,KAAK,CAACG,OAAN,CAAc,CAAd,CAFH;AAGXY,IAAAA,YAAY,EAAEf,KAAK,CAACG,OAAN,CAAc,CAAd;AAHH,GAvCwB;AA4CrCoB,EAAAA,GAAG,EAAE;AACHrB,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADL,GA5CgC;AA+CrCqB,EAAAA,MAAM,EAAE;AACNnB,IAAAA,SAAS,EAAEL,KAAK,CAACG,OAAN,CAAc,CAAd,CADL;AAENY,IAAAA,YAAY,EAAEf,KAAK,CAACG,OAAN,CAAc,CAAd;AAFR;AA/C6B,CAAL,CAAN,CAA5B;AAuDA,eAAe,SAASsB,QAAT,GAAoB;AACjC,QAAMC,OAAO,GAAG3B,SAAS,EAAzB;;AADiC,yBAEVN,aAAa,EAFH;AAAA;;AAAA;;AAAA,QAEtBkC,QAFsB;;AAAA,0BAGL1C,KAAK,CAAC2C,QAAN,CAAe;AACzCC,IAAAA,UAAU,EAAE,KAD6B;AAEzCC,IAAAA,WAAW,EAAE,KAF4B;AAGzCC,IAAAA,UAAU,EAAE,EAH6B;AAIzCC,IAAAA,WAAW,EAAE,EAJ4B;AAKzCC,IAAAA,OAAO,EAAE,EALgC;AAMzCC,IAAAA,QAAQ,EAAE,EAN+B;AAOzCC,IAAAA,MAAM,EAAE,EAPiC;AAQzCC,IAAAA,QAAQ,EAAE,EAR+B;AASzCC,IAAAA,IAAI,EAAE,EATmC;AAUzCC,IAAAA,MAAM,EAAE;AAViC,GAAf,CAHK;AAAA;AAAA,QAG1BC,MAH0B;AAAA,QAGlBC,SAHkB;;AAAA,2BAeHvD,KAAK,CAAC2C,QAAN,CAAe,IAAf,CAfG;AAAA;AAAA,QAe1Ba,OAf0B;AAAA,QAejBC,UAfiB;;AAAA,2BAgBDzD,KAAK,CAAC2C,QAAN,CAAe,IAAf,CAhBC;AAAA;AAAA,QAgB1Be,QAhB0B;AAAA,QAgBhBC,WAhBgB;;AAAA,2BAiBH3D,KAAK,CAAC2C,QAAN,CAAe,KAAf,CAjBG;AAAA;AAAA,QAiB1BiB,OAjB0B;AAAA,QAiBjBC,UAjBiB;;AAmBjC,QAAMC,YAAY,GAAGC,IAAI,IAAI,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC3C,QAAIF,IAAI,KAAK,SAAT,IAAsBA,IAAI,KAAK,UAAnC,EAA+C;AAC7C,UAAIE,GAAJ,EAAS;AACPV,QAAAA,SAAS,mBAAKD,MAAL;AAAa,WAACS,IAAD,GAAQE;AAArB,WAAT;AACD,OAFD,MAEO;AACLV,QAAAA,SAAS,mBAAKD,MAAL;AAAa,WAACS,IAAD,GAAQ;AAArB,WAAT;AACD;AACF,KAND,MAMO;AACLR,MAAAA,SAAS,mBAAMD,MAAN;AAAc,SAACS,IAAD,GAAQC,KAAK,CAACE,MAAN,CAAaC;AAAnC,SAAT;AACD;AACF,GAVD;;AAYA,QAAMC,gBAAgB,GAAG,MAAM;AAC7Bb,IAAAA,SAAS,mBAAKD,MAAL;AAAaV,MAAAA,UAAU,EAAE,CAACU,MAAM,CAACV;AAAjC,OAAT;AACD,GAFD;;AAIA,QAAMyB,iBAAiB,GAAG,MAAM;AAC9Bd,IAAAA,SAAS,mBAAKD,MAAL;AAAaT,MAAAA,WAAW,EAAE,CAACS,MAAM,CAACT;AAAlC,OAAT;AACD,GAFD;;AAIA,QAAMyB,cAAc,GAAG,MAAM,YAAY;AACvC,UAAMC,GAAG,GAAG,MAAM1D,KAAK,CAAC2D,IAAN,CAAW,yCAAX,EAAsD;AACtE,uBAAiBlB,MAAM,CAACR,UAD8C;AAEtE,kBAAYQ,MAAM,CAACP;AAFmD,KAAtD,CAAlB;AAIAc,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAJ,IAAAA,UAAU,CAACc,GAAG,CAACE,IAAL,CAAV;AACAlB,IAAAA,SAAS,mBAAMD,MAAN;AAAcR,MAAAA,UAAU,EAAE,EAA1B;AAA8BC,MAAAA,WAAW,EAAE,EAA3C;AAA+CH,MAAAA,UAAU,EAAE;AAA3D,OAAT;AACD,GARD;;AAUA,QAAM8B,eAAe,GAAG,MAAM,YAAY;AAExC,UAAMH,GAAG,GAAG,MAAM1D,KAAK,CAAC2D,IAAN,CAAW,qCAAX,EAAkD;AAClE,kBAAYlB,MAAM,CAACJ,MAD+C;AAElE,cAAQI,MAAM,CAACN,OAFmD;AAGlE,eAASM,MAAM,CAACL;AAHkD,KAAlD,CAAlB;AAKAY,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,IAAAA,WAAW,CAACY,GAAG,CAACE,IAAL,CAAX;AACAlB,IAAAA,SAAS,mBAAKD,MAAL;AAAaN,MAAAA,OAAO,EAAE,EAAtB;AAA0BE,MAAAA,MAAM,EAAE,EAAlC;AAAsCD,MAAAA,QAAQ,EAAE,EAAhD;AAAoDJ,MAAAA,WAAW,EAAE;AAAjE,OAAT;AACD,GAVD;;AAYA,QAAM8B,YAAY,GAAG,MAAM,YAAY;AACrC,UAAMC,GAAG,GAAG,+CAAZ;AACA,UAAMH,IAAI,GAAG;AACX,gBAAUf,QAAQ,CAACmB,MADR;AAEX,oBAAcrB,OAAO,CAACsB,UAFX;AAGX,aAAOC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAHI;AAIX,kBAAY1B,MAAM,CAACH,QAJR;AAKX,cAAQG,MAAM,CAACD,MALJ;AAMX,cAAQC,MAAM,CAACF;AANJ,KAAb;AAQA6B,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACA,UAAMF,GAAG,GAAG,MAAM1D,KAAK,CAAC2D,IAAN,CAAWI,GAAX,EAAgBH,IAAhB,EAAsB;AACpCU,MAAAA,OAAO,EAAE;AACP,yBAAiB,WAAWJ,YAAY,CAACC,OAAb,CAAqB,KAArB,CADrB;AAEP,wBAAgB;AAFT;AAD2B,KAAtB,EAKbI,KALa,CAKPC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CALA,CAAlB;AAOAJ,IAAAA,OAAO,CAACC,GAAR,CAAYX,GAAZ;AAEAhB,IAAAA,SAAS,CAAC;AACRT,MAAAA,UAAU,EAAE,EADJ;AAERC,MAAAA,WAAW,EAAE,EAFL;AAGRC,MAAAA,OAAO,EAAE,EAHD;AAIRC,MAAAA,QAAQ,EAAE,EAJF;AAKRC,MAAAA,MAAM,EAAE,EALA;AAMRC,MAAAA,QAAQ,EAAE,EANF;AAORC,MAAAA,IAAI,EAAE,EAPE;AAQRC,MAAAA,MAAM,EAAE;AARA,KAAD,CAAT;AAUAI,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAhCD;;AAkCA1D,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqF,mBAAmB,GAAG,YAAY;AACtC,YAAMC,IAAI,GAAG,MAAM1E,KAAK,CAAC2E,GAAN,CAAU,yCAAV,CAAnB;;AACA,UAAI,CAACD,IAAD,IAAS,CAACA,IAAI,CAACd,IAAf,IAAuBc,IAAI,CAACd,IAAL,CAAUgB,MAAV,KAAqB,CAAhD,EAAmD;AACjD,eAAO,IAAP;AACD;;AACD,YAAMC,KAAK,GAAGH,IAAI,CAACd,IAAL,CAAUiB,KAAxB;AAEA,YAAMC,SAAS,GAAG,MAAM9E,KAAK,CAAC2E,GAAN,CAAU,mDAAmDE,KAA7D,CAAxB;AAGAhD,MAAAA,QAAQ,CAAC;AACPkD,QAAAA,IAAI,EAAE,cADC;AAEPD,QAAAA,SAAS,EAAEA,SAAS,CAAClB,IAAV,CAAeoB;AAFnB,OAAD,CAAR;AAID,KAdD;;AAeAP,IAAAA,mBAAmB;AACnBzB,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAlBQ,EAkBN,CAACD,OAAD,CAlBM,CAAT;AAoBA3D,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM6F,oBAAoB,GAAG,YAAY;AACvC,YAAMP,IAAI,GAAG,MAAM1E,KAAK,CAAC2E,GAAN,CAAU,qCAAV,CAAnB;;AACA,UAAI,CAACD,IAAD,IAAS,CAACA,IAAI,CAACd,IAAf,IAAuBc,IAAI,CAACd,IAAL,CAAUgB,MAAV,KAAqB,CAAhD,EAAmD;AACjD,eAAO,IAAP;AACD;;AACD,YAAMC,KAAK,GAAGH,IAAI,CAACd,IAAL,CAAUiB,KAAxB;AACA,YAAMK,SAAS,GAAG,MAAMlF,KAAK,CAAC2E,GAAN,CAAU,+CAA+CE,KAAzD,CAAxB;AACAhD,MAAAA,QAAQ,CAAC;AACPkD,QAAAA,IAAI,EAAE,cADC;AAEPG,QAAAA,SAAS,EAAEA,SAAS,CAACtB,IAAV,CAAeoB;AAFnB,OAAD,CAAR;AAID,KAXD;;AAYAC,IAAAA,oBAAoB;AACpBjC,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAfQ,EAeN,CAACD,OAAD,CAfM,CAAT;AAkBA,SACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEnB,OAAO,CAACtB,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEsB,OAAO,CAACf,MAA/B;AAAuC,IAAA,QAAQ,EAAC,QAAhD;AAAyD,IAAA,SAAS,EAAC,IAAnE;AAAwE,IAAA,OAAO,EAAC,IAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEe,OAAO,CAACZ,QAA/B;AAAyC,IAAA,QAAQ,EAAC,QAAlD;AAA2D,IAAA,OAAO,EAAC,WAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAFJ,EAGI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEY,OAAO,CAACuD,IAA/B;AAAqC,IAAA,QAAQ,EAAC,QAA9C;AAAuD,IAAA,SAAS,EAAC,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAHJ,EAMI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAExC,OAAtB;AAA+B,IAAA,UAAU,EAAEC,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOA,oBAAC,MAAD;AACQ,IAAA,IAAI,EAAC,QADb;AAEQ,IAAA,SAAS,MAFjB;AAGQ,IAAA,OAAO,EAAC,WAHhB;AAIQ,IAAA,KAAK,EAAC,SAJd;AAKQ,IAAA,SAAS,EAAEhB,OAAO,CAACT,SAL3B;AAMQ,IAAA,OAAO,EAAEoC,gBANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPA,EAiBCd,MAAM,CAACV,UAAP,GACD,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,SAAS,EAAEH,OAAO,CAACN,OADrB;AAEE,IAAA,IAAI,EAAG,aAFT;AAGE,IAAA,OAAO,EAAG,UAHZ;AAIE,IAAA,MAAM,EAAG,QAJX;AAKE,IAAA,KAAK,EAAG,cALV;AAME,IAAA,KAAK,EAAI,IANX;AAOE,IAAA,QAAQ,EAAI2B,YAAY,CAAC,YAAD,CAP1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE,oBAAC,SAAD;AACE,IAAA,SAAS,EAAErB,OAAO,CAACN,OADrB;AAEE,IAAA,IAAI,EAAG,cAFT;AAGE,IAAA,OAAO,EAAG,UAHZ;AAIE,IAAA,MAAM,EAAG,QAJX;AAKE,IAAA,KAAK,EAAG,eALV;AAME,IAAA,KAAK,EAAI,IANX;AAOE,IAAA,QAAQ,EAAI2B,YAAY,CAAC,aAAD,CAP1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAmBE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAC,SAAX;AAAqB,IAAA,OAAO,EAAEQ,cAAc,EAA5C;AAAgD,IAAA,IAAI,EAAC,OAArD;AAA6D,kBAAW,KAAxE;AAA8E,IAAA,SAAS,EAAE7B,OAAO,CAACH,GAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAnBF,CADC,GAwBC,IAzCF,EA0CM,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEG,OAAO,CAACuD,IAA/B;AAAqC,IAAA,QAAQ,EAAC,QAA9C;AAAuD,IAAA,SAAS,EAAC,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCA1CN,EA6CA,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAEtC,QAAxB;AAAkC,IAAA,WAAW,EAAEC,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7CA,EA8CA,oBAAC,MAAD;AACQ,IAAA,IAAI,EAAC,QADb;AAEQ,IAAA,SAAS,MAFjB;AAGQ,IAAA,OAAO,EAAC,WAHhB;AAIQ,IAAA,KAAK,EAAC,SAJd;AAKQ,IAAA,SAAS,EAAElB,OAAO,CAACT,SAL3B;AAMQ,IAAA,OAAO,EAAEqC,iBANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA9CA,EAwDCf,MAAM,CAACT,WAAP,GACD,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,SAAS,EAAEJ,OAAO,CAACJ,WADrB;AAEE,IAAA,IAAI,EAAG,UAFT;AAGE,IAAA,OAAO,EAAG,UAHZ;AAIE,IAAA,MAAM,EAAG,QAJX;AAKE,IAAA,KAAK,EAAG,MALV;AAME,IAAA,KAAK,EAAI,IANX;AAOE,IAAA,QAAQ,EAAIyB,YAAY,CAAC,SAAD,CAP1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE,oBAAC,SAAD;AACE,IAAA,SAAS,EAAErB,OAAO,CAACJ,WADrB;AAEE,IAAA,IAAI,EAAG,WAFT;AAGE,IAAA,OAAO,EAAG,UAHZ;AAIE,IAAA,MAAM,EAAG,QAJX;AAKE,IAAA,KAAK,EAAG,OALV;AAME,IAAA,KAAK,EAAI,IANX;AAOE,IAAA,QAAQ,EAAIyB,YAAY,CAAC,UAAD,CAP1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAmBE,oBAAC,SAAD;AACE,IAAA,SAAS,EAAErB,OAAO,CAACJ,WADrB;AAEE,IAAA,IAAI,EAAG,SAFT;AAGE,IAAA,OAAO,EAAG,UAHZ;AAIE,IAAA,MAAM,EAAG,QAJX;AAKE,IAAA,KAAK,EAAG,UALV;AAME,IAAA,KAAK,EAAI,IANX;AAOE,IAAA,QAAQ,EAAIyB,YAAY,CAAC,QAAD,CAP1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,EA4BE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAC,SAAX;AAAqB,IAAA,OAAO,EAAEY,eAAe,EAA7C;AAAiD,IAAA,IAAI,EAAC,OAAtD;AAA8D,kBAAW,KAAzE;AAA+E,IAAA,SAAS,EAAEjC,OAAO,CAACH,GAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA5BF,CADC,GAiCC,IAzFF,EA0FI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEG,OAAO,CAACuD,IAA/B;AAAqC,IAAA,QAAQ,EAAC,QAA9C;AAAuD,IAAA,SAAS,EAAC,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCA1FJ,EA6FI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAG,UADX;AAEI,IAAA,OAAO,EAAC,UAFZ;AAGI,IAAA,MAAM,EAAC,QAHX;AAII,IAAA,QAAQ,MAJZ;AAKI,IAAA,SAAS,MALb;AAMI,IAAA,KAAK,EAAC,UANV;AAOI,IAAA,KAAK,EAAI1C,MAAM,CAACH,QAPpB;AAQI,IAAA,QAAQ,EAAEW,YAAY,CAAC,UAAD,CAR1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7FJ,EAuGI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAErB,OAAO,CAACuD,IAA/B;AAAqC,IAAA,QAAQ,EAAC,QAA9C;AAAuD,IAAA,SAAS,EAAC,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAvGJ,EA0GI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAG,MADX;AAEI,IAAA,OAAO,EAAC,UAFZ;AAGI,IAAA,MAAM,EAAC,QAHX;AAII,IAAA,QAAQ,MAJZ;AAKI,IAAA,SAAS,MALb;AAMI,IAAA,KAAK,EAAC,MANV;AAOI,IAAA,KAAK,EAAI1C,MAAM,CAACF,IAPpB;AAQI,IAAA,QAAQ,EAAEU,YAAY,CAAC,MAAD,CAR1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1GJ,EAoHI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAErB,OAAO,CAACuD,IAA/B;AAAqC,IAAA,QAAQ,EAAC,QAA9C;AAAuD,IAAA,SAAS,EAAC,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BApHJ,EAuHI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAG,QADX;AAEI,IAAA,OAAO,EAAC,UAFZ;AAGI,IAAA,MAAM,EAAC,QAHX;AAII,IAAA,QAAQ,MAJZ;AAKI,IAAA,SAAS,MALb;AAMI,IAAA,KAAK,EAAC,QANV;AAOI,IAAA,KAAK,EAAI1C,MAAM,CAACD,MAPpB;AAQI,IAAA,QAAQ,EAAES,YAAY,CAAC,QAAD,CAR1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvHJ,EAiIM,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,OAAO,EAAC,WAHV;AAIE,IAAA,KAAK,EAAC,SAJR;AAKE,IAAA,SAAS,EAAErB,OAAO,CAACF,MALrB;AAME,IAAA,OAAO,EAAEoC,YAAY,EANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjIN,CADJ;AA8ID","sourcesContent":["import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, TextField, Typography, Container, InputLabel } from '@material-ui/core';\nimport { useStateValue } from '../state';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport CompanyList from './CompanyList';\nimport LocationList from './LocationList';\nimport axios from 'axios';\n\nconst useStyles = makeStyles(theme => ({\n  form: {\n    margin: theme.spacing(1),\n  },\n  container: {\n    marginTop: theme.spacing(1),\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  header: {\n      marginTop: theme.spacing(5),\n      textAlign: \"center\",\n      flex: \"0 0 100%\",\n  },\n  subtitle: {\n    marginBottom: theme.spacing(5),\n    textAlign: \"center\",\n    flex: \"0 0 100%\",\n  },\n  input: {\n    display: 'none',\n  },\n  addButton: {\n    margin: theme.spacing(1),\n    flex: \"0 0 20%\",\n  },\n  autoComplete: {\n    minWidth: 240, \n    margin: theme.spacing(1),\n    flex: \"0 0 70%\",\n  },\n  subtext: {\n    flex: \"0 0 35%\",\n    marginBottom: theme.spacing(3),\n    paddingRight: theme.spacing(1),\n  },\n  subtext_loc: {\n    flex: \"0 0 25%\",\n    paddingRight: theme.spacing(1),\n    marginBottom: theme.spacing(3)\n  },\n  fab: {\n    margin: theme.spacing(1)\n  },\n  submit: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(5)\n  }\n}));\n\n\n\nexport default function WorkForm() {\n  const classes = useStyles();\n  const [{}, dispatch] = useStateValue();\n  const [values, setValues] = React.useState({\n    addCompany: false, \n    addLocation: false, \n    newCompany: '',\n    newIndustry: '',\n    newCity: '',\n    newState: '',\n    newZip: '',\n    position: '',\n    year: '',\n    salary: '',\n  });\n  const [company, setCompany] = React.useState(null);\n  const [location, setLocation] = React.useState(null);\n  const [didPost, setDidPost] = React.useState(false);\n\n  const handleChange = name => (event, val) => {\n    if (name === \"company\" || name === \"location\") {\n      if (val) {\n        setValues({...values, [name]: val});\n      } else {\n        setValues({...values, [name]: null});\n      }\n    } else {\n      setValues({ ...values, [name]: event.target.value });\n    }\n  };\n\n  const toggleAddCompany = () => {\n    setValues({...values, addCompany: !values.addCompany});\n  }\n\n  const toggleAddLocation = () => {\n    setValues({...values, addLocation: !values.addLocation});\n  }\n\n  const postNewCompany = () => async () => {\n    const res = await axios.post(\"http://67.159.88.90:8000/api/employers/\", {\n      \"employer_name\": values.newCompany,\n      \"industry\": values.newIndustry,\n    })\n    setDidPost(true);\n    setCompany(res.data);\n    setValues({ ...values, newCompany: \"\", newIndustry: \"\", addCompany: false});\n  }\n\n  const postNewLocation = () => async () => {\n\n    const res = await axios.post(\"http://67.159.88.90:8000/api/sites/\", {\n      \"zip_code\": values.newZip,\n      \"city\": values.newCity,\n      \"state\": values.newState,\n    });\n    setDidPost(true);\n    setLocation(res.data);\n    setValues({...values, newCity: \"\", newZip: \"\", newState: \"\", addLocation: false});\n  }\n\n  const postWorkForm = () => async () => {\n    const url = \"http://67.159.88.90:8000/api/userwagepending/\";\n    const data = {\n      \"siteid\": location.siteid,\n      \"employerid\": company.employerid,\n      \"uid\": localStorage.getItem('uid'),\n      \"position\": values.position,\n      \"wage\": values.salary,\n      \"year\": values.year,\n    };\n    console.log(data);\n    const res = await axios.post(url, data, {\n        headers: {\n          \"Authorization\": \"Token \" + localStorage.getItem(\"key\"),\n          \"Content-Type\": \"application/json\",\n        }\n      }).catch(err => console.log(err));\n    \n    console.log(res);\n\n    setValues({\n      newCompany: '',\n      newIndustry: '',\n      newCity: '',\n      newState: '',\n      newZip: '',\n      position: '',\n      year: '',\n      salary: '',\n    });\n    setCompany(null);\n    setLocation(null);\n  }\n\n  useEffect(() => {\n    const fetchCompanyOptions = async () => {\n      const init = await axios.get(\"http://67.159.88.90:8000/api/employers/\");\n      if (!init || !init.data || init.data.length === 0) {\n        return null;\n      } \n      const count = init.data.count;\n  \n      const companies = await axios.get(\"http://67.159.88.90:8000/api/employers/?limit=\" + count);\n      \n  \n      dispatch({\n        type: 'getCompanies',\n        companies: companies.data.results,\n      });\n    };\n    fetchCompanyOptions();\n    setDidPost(false);\n  }, [didPost]);\n\n  useEffect(() => {\n    const fetchLocationOptions = async () => {\n      const init = await axios.get(\"http://67.159.88.90:8000/api/sites/\");\n      if (!init || !init.data || init.data.length === 0) {\n        return null;\n      } \n      const count = init.data.count;\n      const locations = await axios.get(\"http://67.159.88.90:8000/api/sites/?limit=\" + count);\n      dispatch({\n        type: 'getLocations',\n        locations: locations.data.results,\n      });\n    }\n    fetchLocationOptions();\n    setDidPost(false);\n  }, [didPost]);\n\n\n  return (\n      <Container className={classes.container}>\n          <Typography className={classes.header} position=\"static\" component=\"h1\" variant=\"h4\">Add your work experience</Typography>\n          <Typography className={classes.subtitle} position=\"static\" variant=\"subtitle1\">Contribute and give back to the Blueberry community!</Typography>\n          <Typography className={classes.text} position=\"static\" component=\"body1\">\n            Which company did you work at?\n          </Typography>\n          <CompanyList company={company} setCompany={setCompany}></CompanyList>\n      <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.addButton}\n              onClick={toggleAddCompany}\n            >\n              Add Company\n            </Button>\n      {values.addCompany ? \n      <React.Fragment>\n        <TextField\n          className={classes.subtext}\n          name = \"new-company\"\n          variant = \"standard\"\n          margin = \"normal\"\n          label = \"Company Name\"\n          value = {null}\n          onChange = {handleChange('newCompany')}\n        ></TextField>\n        <TextField\n          className={classes.subtext}\n          name = \"new-industry\"\n          variant = \"standard\"\n          margin = \"normal\"\n          label = \"Industry Type\"\n          value = {null}\n          onChange = {handleChange('newIndustry')}\n        ></TextField>\n        <Fab color=\"primary\" onClick={postNewCompany()} size=\"small\" aria-label=\"add\" className={classes.fab}>\n          <AddIcon />\n        </Fab>\n      </React.Fragment> :\n        null}\n            <Typography className={classes.text} position=\"static\" component=\"body1\">\n                Where was the office located? \n          </Typography>\n      <LocationList location={location} setLocation={setLocation}></LocationList>\n      <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.addButton}\n              onClick={toggleAddLocation}\n            >\n              Add Location\n            </Button>\n      {values.addLocation ?\n      <React.Fragment>\n        <TextField\n          className={classes.subtext_loc}\n          name = \"new-city\"\n          variant = \"standard\"\n          margin = \"normal\"\n          label = \"City\"\n          value = {null}\n          onChange = {handleChange('newCity')}\n        ></TextField>\n        <TextField\n          className={classes.subtext_loc}\n          name = \"new-state\"\n          variant = \"standard\"\n          margin = \"normal\"\n          label = \"State\"\n          value = {null}\n          onChange = {handleChange('newState')}\n        ></TextField>\n        <TextField\n          className={classes.subtext_loc}\n          name = \"new-zip\"\n          variant = \"standard\"\n          margin = \"normal\"\n          label = \"Zip Code\"\n          value = {null}\n          onChange = {handleChange('newZip')}\n        ></TextField>\n        <Fab color=\"primary\" onClick={postNewLocation()} size=\"small\" aria-label=\"add\" className={classes.fab}>\n          <AddIcon />\n        </Fab>\n      </React.Fragment> :\n        null}\n          <Typography className={classes.text} position=\"static\" component=\"body1\">\n                What position did you hold? \n          </Typography>\n          <TextField \n              name = \"position\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Position\"\n              value = {values.position}\n              onChange={handleChange('position')}\n            />\n          <Typography className={classes.text} position=\"static\" component=\"body1\">\n                When is this information from?\n          </Typography>\n          <TextField \n              name = \"year\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Year\"\n              value = {values.year}\n              onChange={handleChange('year')}\n            />\n          <Typography className={classes.text} position=\"static\" component=\"body1\">\n                What was your salary?\n          </Typography>\n          <TextField \n              name = \"salary\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Salary\"\n              value = {values.salary}\n              onChange={handleChange('salary')}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={postWorkForm()}\n            >\n              Submit\n            </Button>\n      </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}