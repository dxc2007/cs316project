{"ast":null,"code":"import _defineProperty from \"/home/xiaochen/Downloads/cs316project/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/xiaochen/Downloads/cs316project/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/xiaochen/Downloads/cs316project/frontend/src/components/ResultGrid.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Paper from '@material-ui/core/Paper';\nimport { useStateValue } from '../state';\nimport axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    flex: 1\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    width: '100%',\n    overflowX: 'auto',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 650\n  }\n}));\nexport default function DenseTable() {\n  const classes = useStyles();\n\n  const _useStateValue = useStateValue(),\n        _useStateValue2 = _slicedToArray(_useStateValue, 2),\n        searchResult = _useStateValue2[0].searchResult,\n        dispatch = _useStateValue2[1];\n\n  const _React$useState = React.useState({\n    wage: 1,\n    housing: 1\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        toggle = _React$useState2[0],\n        setToggle = _React$useState2[1];\n\n  const _React$useState3 = React.useState(0),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        page = _React$useState4[0],\n        setPage = _React$useState4[1];\n\n  const renderListingGrid = searchResult => {\n    if (searchResult && searchResult.results) {\n      return searchResult.results.map(listing => React.createElement(TableRow, {\n        key: listing.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, listing.company), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, listing.location), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, listing.position), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, listing.year), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, listing.wage.toLocaleString())));\n    } else {\n      return 'No Search Results';\n    }\n  };\n\n  const updateSearchResult = async url => {\n    let wageInfo = await axios.get(url);\n\n    if (!wageInfo || !wageInfo.data || !wageInfo.data.results || wageInfo.data.results.length === 0) {\n      return null;\n    }\n\n    const newSearchResult = _objectSpread({}, wageInfo.data, {\n      results: wageInfo.data.results.map(posting => ({\n        company: posting.employer,\n        location: posting.city,\n        position: posting.position,\n        year: posting.year,\n        wage: posting.wage,\n        id: posting.id\n      }))\n    });\n\n    dispatch({\n      type: 'updateSearchResult',\n      searchResult: newSearchResult\n    });\n  };\n\n  const handlePageChange = (event, newPage) => {\n    if (parseInt(newPage) > parseInt(page)) {\n      updateSearchResult(searchResult.next);\n    } else {\n      updateSearchResult(searchResult.previous);\n    }\n\n    setPage(newPage);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    size: \"small\",\n    \"aria-label\": \"a dense table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Company\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Location\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Position\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Year\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Wage\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, renderListingGrid(searchResult)), React.createElement(TablePagination, {\n    count: searchResult ? searchResult.count : 0,\n    rowsPerPage: 10,\n    rowsPerPageOptions: [],\n    page: page,\n    onChangePage: handlePageChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/home/xiaochen/Downloads/cs316project/frontend/src/components/ResultGrid.js"],"names":["React","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","TablePagination","Paper","useStateValue","axios","useStyles","theme","root","width","height","flex","paper","marginTop","spacing","overflowX","marginBottom","table","minWidth","DenseTable","classes","searchResult","dispatch","useState","wage","housing","toggle","setToggle","page","setPage","renderListingGrid","results","map","listing","id","company","location","position","year","toLocaleString","updateSearchResult","url","wageInfo","get","data","length","newSearchResult","posting","employer","city","type","handlePageChange","event","newPage","parseInt","next","previous","count"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Paper from '@material-ui/core/Paper';\nimport { useStateValue } from '../state';\nimport axios from 'axios';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    flex: 1\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    width: '100%',\n    overflowX: 'auto',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 650,\n  },\n}));\n\nexport default function DenseTable() {\n  const classes = useStyles();\n  const [{ searchResult }, dispatch] = useStateValue();\n  const [toggle, setToggle] = React.useState({\n    wage: 1,\n    housing: 1,\n  });\n\n  const [page, setPage] = React.useState(0);\n\n  const renderListingGrid = (searchResult) => {\n    if (searchResult && searchResult.results) {\n        return searchResult.results.map(listing => (\n              <TableRow key={listing.id}>\n                <TableCell align=\"right\">{listing.company}</TableCell>\n                <TableCell align=\"right\">{listing.location}</TableCell>\n                <TableCell align=\"right\">{listing.position}</TableCell>\n                <TableCell align=\"right\">{listing.year}</TableCell>\n                <TableCell align=\"right\">{listing.wage.toLocaleString()}</TableCell>\n              </TableRow>\n            ))\n    } else {\n        return 'No Search Results';\n    }\n}\n\nconst updateSearchResult = async (url) => {\n  let wageInfo = await axios.get(url);\n  if (!wageInfo || !wageInfo.data || !wageInfo.data.results || wageInfo.data.results.length === 0) {\n    return null;\n  }\n\n  const newSearchResult =  {\n    ...wageInfo.data,\n    results: wageInfo.data.results.map(posting => \n        ({\n        company: posting.employer, \n        location: posting.city, \n        position: posting.position,\n        year: posting.year, \n        wage: posting.wage,\n        id: posting.id, \n    })),\n  };\n\n  dispatch({\n    type: 'updateSearchResult',\n    searchResult: newSearchResult,\n  });\n}\n\n\nconst handlePageChange = (event, newPage) => {\n  if (parseInt(newPage) > parseInt(page)) {\n    updateSearchResult(searchResult.next);\n  } else {\n    updateSearchResult(searchResult.previous);\n  }\n  setPage(newPage);\n}\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"right\">Company</TableCell>\n              <TableCell align=\"right\">Location</TableCell>\n              <TableCell align=\"right\">Position</TableCell>\n              <TableCell align=\"right\">Year</TableCell>\n              <TableCell align=\"right\">Wage</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {renderListingGrid(searchResult)}\n          </TableBody>\n          <TablePagination\n            count={searchResult? searchResult.count: 0}\n            rowsPerPage={10}\n            rowsPerPageOptions={[]}\n            page={page}\n            onChangePage={handlePageChange}\n        />\n        </Table>\n      </Paper>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}